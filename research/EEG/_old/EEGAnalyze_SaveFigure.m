function EEGAnalyze_SaveFigure(t,stat,strExperiment,strID,strERP,strBase,strDirOut,varargin)
% EEGAnalyze_SaveFigure
% 
% Description:	save a single figure of EEG analysis results
% 
% Syntax:	EEGAnalyze_SaveFigure(stat,strERP,strBase,<options>)
% 
% In:
%	t				- a time vector
% 	stat			- the stat struct (see EEGAnalyzeSession)
%	strExperiment	- the name of the experiment
%	strID			- the id of the data set
%	strERP			- the ERP type for which to save the figure
%	strBase			- the time base for which to save the figure
%	strDirOut		- the output directory
%	<options>:
%		type:		('window') the type of figure to save
%		condition:	({}) for type=='window', a cell of tree paths in stat.win
%					leading to the data to plot (e.g. {{'cuedlong','go','any'}}
%		title:		('') the title of the plot
%		legend:		(<none>) the legend cell for the plotted conditions
%		color:		(<alexplot default>) the color of each plot line
%		name:		('') the name of the figure, for file names
%		ymin:		(<auto>) minimum vertical axis value
%		ymax:		(<auto>) maximum vertical axis value
% 
% Updated: 2010-11-12
% Copyright 2010 Alex Schlegel (schlegel@gmail.com).  All Rights Reserved.
opt	= ParseArgsOpt(varargin,...
		'type'		, 'window'	, ...
		'condition'	, {}		, ...
		'title'		, ''		, ...
		'legend'	, []		, ...
		'color'		, []		, ...
		'name'		, ''		, ...
		'ymin'		, []		, ...
		'ymax'		, []		  ...
		);

switch opt.type
	case 'window'
		y	= cellfun(@(x) GetFieldPath(stat.win,strERP,strBase,x{:},'m'),opt.condition,'UniformOutput',false);
		e	= cellfun(@(x) GetFieldPath(stat.win,strERP,strBase,x{:},'se'),opt.condition,'UniformOutput',false);
		
		EEGFigureWindow(t,y,e,...
			'title'			, opt.title		, ...
			'erp'			, strERP		, ...
			'base'			, strBase		, ...
			'id'			, strID			, ...
			'legend'		, opt.legend	, ...
			'color'			, opt.color		, ...
			'ymin'			, opt.ymin		, ...
			'ymax'			, opt.ymax		, ...
			'experiment'	, strExperiment	, ...
			'name'			, opt.name		, ...
			'dir_out'		, strDirOut		, ...
			'show'			, false			  ...
			);
	otherwise
		error(['"' tostring(opt.type) '" is not a valid figure type.']);
end
